NG_DOCS={
  "sections": {
    "tutorial": "Learning Yeoman Book",
    "api": "API"
  },
  "pages": [
    {
      "section": "tutorial",
      "id": "index",
      "shortName": "Index",
      "type": "overview",
      "keywords": "able about actions all an and android angular angular-seed angularjs any app application apps are as at be better between binding boot-strap browser browsers build building can catalog change check class client-side common construction couple create creates data day define dependency details device devices diagram differences digging displays document dom dynamic each easier end end-to-end entire examples experiments extensions filter finish for frameworks get getting go great guides height hours how identify if img immediately in including index injection interest into introduced introduction is it javascript learn learning lets list listeners looking make makes manipulation may misc modification more need of on only or out overview own pleasant plug-ins png process project projects provide quickly re really resources response run running see services shorter simple smarter spend src started step such suggestions tasks test tests that the then this through to tutorial understand unit use user view views walks want way web when which whole width will without work works writing you your"
    },
    {
      "section": "tutorial",
      "id": "chapter1",
      "shortName": "Modern Workflows",
      "type": "overview",
      "keywords": "$ctrl $http $httpbackend $new $rootscope $scope able about above action actively add adding addy after against all allow allowing allows already also alt always among an and angular angular-cookies angular-resource angular-route angular-sanitize angularjs another answering any anywhere api app appear appended application applications are around array as ask assets assumes at attaching attribute attributes authoring automatic automatically automation available backend base based be because been before beforeeach begin being below best bind binding bootstrap bower bower_components box browser build built built-in but button by cache call callback called calls camel camelcase can caption care case cases cd change changes chapter checking checks child choice chrome class classes clean clicking client client_id clientid code coding coffeescript col-md-3 col-sm-3 collection com combines command command-line commands common community compass compilation compile compiles compiling concatenating concatenation conf configfile configuration configure configures connect connecting console consuming contains contents controller controllers core correct correctly corresponding count cover coverage create created creates creating css current data database debug declare deep default defined definition demonstrate dependencies dependency dependent deployment describe detect developed developer developers development dig directive directory dirty discuss display displaying dist div do documentation does doing downloading dropboxusercontent during e2e each easier easily easy easy-to-use ef2bd67b7dfb4bf8899999d61386d567 element elements end-2-end endpoint ensure entire environment error errors examine example excellent execute executing existing expect expecting expects exposes eyes fail failing false fast faster favicon feature features fetch few fewer file filename files finally first flush folder folders followed following for framework frameworks free frequently friends from fully function functioning generate generated generator generator- generator-angular generators get getting git globally go goes going good google got great grid groups grunt gruntfile handles handling hands hard has have header headless hello-yeoman help helpful helps here hold hours how href html http httpbackend https ico id if image images img improving in include includes incorporate incredibly index individual infancy init initial initialize initializes inside instagram install installation installed installing installs interface interfaces into introducing invoke irish is issue it item its jasmine javascript join jpegtran js jshint json json_callback jsonp just karma karma-e2e kick language large lastly later latest launches learn learned learning learnt length less let lets letting li libraries like line linting list list-unstyled lists little livereload loads local located location log logging logic look lot made magic main mainctrl maintain make makes making manage management manager managing many marketing matures md means media method methods minification minifier minifies minimized minor minute mkdir mocha mock mockresponse modern modern-day module modules monitors more most much must name named navigateto necessary need needed new next ng-repeat ng-src nicely no nodejs not notch note notice now npm number of off offer on once one only open open-source opened opens optimization optimized optimizer optimizing option options optipng or order organized osmani other our out output over overview overwhelmed package packages page parameters params part pass passed passes passing path paul performing phantomjs phrase pioneers place plugins png populated potential power powerful practices prefixed pretty preview problems process processed processes produces productivity project projects proper properly property provide questions quick qunit readme ready really recent reference referenced references refreshed register registered registry rel relatively reload remove removes rendering repeat repeated replace request requests respond response rest results retrieve revision right robot robots row run runner running runs sass save saved scaffold scaffolding scenario scope scratch scripts scss seamless search second see select separate serve server service set sets setting settings setup several sheets ship should show similar simple simply since singlerun so socket some something source spec specified src stage start started starts steps still store straightforward structure style styles stylesheet sub-generators sub-tasks success such sudo summary sure syntax systems take taken takes taking task task-based tasks team tells templates terminal test testing tests text than thanks that the their then there these they thing things think this three thru thumbnail time tmp to tobe tobedefined toequal together tool tooling tools top true try turn tutorial twitter two txt ui un-ordered unit up update updates uploaded url us use used useful user using usually utility value var variable variables version very via view views visit want was watch we web webapps webkit well were what when whenjsonp where which while who will with within without work workflow workflows working would wrapped writing yeoman yes yet yo you your"
    },
    {
      "section": "tutorial",
      "id": "chapter2",
      "shortName": "My Angular Project",
      "type": "overview",
      "keywords": "$cookiestore $http $inject $location $log $path $q $resource $scope ability able about above absurl access accessed across action actions actual add adding additions address admin administrators after against aggregation aid algorithm alias all allow along already also an anatomy and angular angular-cms angular-specific angularjs annotation another any api app application applications approach architecture archive are argument arguments array as assets associated at attach attached attaches attribute attributes augmenting authenticated authentication auto-bootstraps automatic automatically available back bar based bash_profile basic be before behavior behind being between binding bindings binds bits bitwise block body boolean bootstraps both bound bower braces broken browser browsers build building builds built built-in business but button by called can change changes chapter chapters characteristics checked children choice choosing chunks class classified clicked client client-side closely cms code codebase coffee col coldfusion collection com comes command common commonly communication compares comparison compiler compiles component components composed concepts concerned connects consist console constructed constructs contain container containing contains content context control controller controllers converts cookies copy core cover covered cp create created creates creating css curl curly currency current custom dashboard data data-binding database date debug declarative declared default defer define defined definition delete dependencies dependency depends describes description descriptions design developer developers developing development diagram diagrams different directed directive directives directory dirty discuss discussed display displayed displaying documents does dom dot double down download driven dynamic e2e each ease echo either element elements email empty enabled end enter entry error evaluated evaluates event event-driven examining example examples execution explain explore explored express expression expressions external extract falls features fetch fetches fetching few file files filter filters finally finds fine firm first fit fits fixes flexible folder following for form formats formatted formatting fragment framework frequently from front-end func function functionality functions further general generally generate generator get getmessages gets go going good gravatar great grunt handle handles hands happened has hash have head hello help here horizontally host how html http id idea images implementation implementing implements important in inbox include includes including incorporates independent index inferring info information initial initialized inject injected injection inline input inside install installation instance instantiates instructs interact interface into invoke invoked io is isolate it item items its j2ee javascript javascript-like js json jsonp just keeping key key-value know language lans latest layer learned length let leverage li libraries library light-weight like limited limitto links linky list little live log logging logic logical loginform look loosing lot lowercase made main mainctrl make makes making manage management manages managing manipulate many mediumtime members message messages method methods middle middleware mimic minimal mirror mirroring mkdir mm mock mock-up mock-ups mocked model model-view-controller modeling models modern module modules mongod mongodb mongodb-osx-x86_64-2 msg multi-page mvc my myapp name named names need needed nestable nested network new next ng-app ng-bind-html ng-click ng-controller ng-form ng-include ng-init ng-model ng-repeat ng-src ng-submit node nodejs non-blocking nor nosql not notation notify now npm null number numerical object objects observe occur of offers often on once one ones onsubmit open open-source operands operator operators or orderby orders org our over overview page paragraph parameter parses part partials pass path pattern per php piece pieces place placed plain platform point port possible post power powerful predicate presentation prevents principles process processing produce project projects promise propagate proper properties property provide provides providing public purpose push pushes put query rails ready real real-world realtime reference referencing refers reflected reflects regarding registered registration reject relationship release remote remove rendered repeat repeated repeats replace representation request requests required resolve resource response responsible rest restful results retrieved return returns reusable robust role roles router routes routing ruby save scaffold scalable scale scenario scenarios schemas scope scopes script scripting search second self-contained server server-side servers service services serving session set setting shared should show side simple simplest simplify simply since single single-page single-page-application single-threaded singletons site size slated snippets so socket software solutions some somemodule source sources specific specification specified specifies src standard start started state steps storage store stories story story-driven storyboard storyboards straight-forward streamline string structure style success such sudo summary support supported supports sure sync syncing syntax system tag take takes tar target tasks technologies tell template templates templating terminal terminology test testing tests text textual tgz that the their then there these they this three three-tier through throughout tier tiers ties time times timestamp title to together topics transform treat trigger true truly tutorial two two-way type types ui understanding understands unit unix until up updated uppercase url urls usage usd use used user users uses using usually value values var variables various verify versa very vi via vice view views visitors visual walkthrough wans warn ways we web well what whatever when whenever where whether which while widgets will with within without word work workflow working xmlhttprequest yeoman yet yo you your"
    },
    {
      "section": "tutorial",
      "id": "example",
      "shortName": "MVC",
      "type": "overview",
      "keywords": "$index $location $rootscope $scope $watch above all allows and angular any api are as available back be because behavior between black board border browser button by call calls can cell cellstyle center changes changing class clean click code col connection controller cookbook copy cursor deep-linking defined diagonal droppiece easy element example execute expect for foreach from function functions game grade grafted has hash height html if in injected instantiate instantiated into invokes is isolation it javascript join just listener logic makes methods_ middle model mvc needed next nextmove ng-click ng-controller ng-repeat ng-show ng-style no notice object objects of one onto overview piece play player pointer primitives projection properties push readurl reference referenced rendering reset return row rows same scope search see separation set seturl share should simply since so solid split state steps still stored style td template test testable text text-align that the there things this tictactoecntl to toequal tr track tutorial undo up url value var variable vertical-align very view when which width will winner without won"
    }
  ],
  "apis": {
    "tutorial": false,
    "api": true
  },
  "html5Mode": false,
  "startPage": "/",
  "discussions": {
    "shortName": "my",
    "url": "http://my-domain.com",
    "dev": false
  },
  "scripts": [
    "angular.min.js"
  ]
};