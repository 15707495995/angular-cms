{"name":"Angular-cms","tagline":"A light weight CMS built with Angular.js and Yeoman.","body":"\r\n\r\n# ￼Learning Yeoman - Angular\r\n\r\n* Preface\r\n* Chapter 1: Modern Workflows for Modern WebApps\r\n* Chapter 2: Get Started\r\n* Chapter 3: My Angular Project\r\n* Chapter 4: Routes, Views & Controllers\r\n* Chapter 5: Factories & Services\r\n* Chapter 6: Custom Generator’s\r\n* Chapter 7: Custom Library’s \r\n* Chapter 8: Tasks with Grunt\r\n* Chapter 9: Tips & Tricks\r\n* Appendix: Resources\r\n\r\n\r\n\r\n## Preface\r\n￼￼This book provides you with the opportunity to discover all three core tools that the Yeoman workflow has to offer but also gives you an insight into its advanced features. \r\n\r\nThe book will focus on what kind of applications can be built using Yeoman and what kind of frameworks that can be used easily with it. \r\n\r\nIn order to demonstrate how it can speed up development time, we'll build a application from scratch, integrating with the AngularJS framework with as many functionalities as needed by any modern web application.\r\n￼\r\nGiven that Yeoman can be used with both JavaScript and CoffeeScript, you'll be introduced to the CoffeScript programming language. However, most of the examples are in JavaScript.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Chapter 1: Modern Workflows for Modern WebApps\r\nThis chapter will discuss the three core tools that make up the Yeoman workflow, how to use these tools in development and how to incorporate this workflow into new or existing projects.\r\n\r\n\r\n### Overview\r\nThe phrase '*Modern WebApps*' is a relatively new thing since the web is still in its infancy stage. But as the web matures so does the need for its tools and workflows, thanks to some modern-day web pioneers over at Google; Paul Irish and Addy Osmani have developed a modern workflow that goes by the name of Yeoman. \r\n\r\nThe Yeoman workflow is a collection of three tools for improving developers productivity when build a web application: `yo` the scaffolding tool, `grunt` the build tool and `bower` the package tool.\r\n\r\n* **Yo** is used to scaffold new projects; project files and other generators.\r\n* **Grunt** is used for task management; compilation, optimization and testing.\r\n* **Bower** is used for package management; installing packages, managing dependencies.\r\n\r\n> Welcome to Learning Yeoman: The content of this book is up to date with Yeoman 1.0.\r\n\r\n### Features of Yeoman\r\nBefore we dig deep into using each tool of the workflow, let us take a look at some of the Yeoman tooling features that would help you in your next project.\r\n\r\n* **Scaffolding** - Easy to use scaffolding tool for creating new projects or files from templates.\r\n* **Package Management** - Search, install and manage project dependencies via the command line. \r\n* **Automation** - Simple watch process to compile CoffeeScript or LESS and reload browser on changes.\r\n* **Build Process** - Tasks for minification, concatenation, compilation, optimization and testing.\r\n* **Linting** - Scripts are run against JSHint to ensure language best practices.\r\n* **Optimization** - Images are optimized using OptiPNG and JPEGTran, HTML is optimized using HTML Minifier.\r\n* **Testing** - Run Jasmine, QUnit, Mocha and just any other testing framework headless with PhantomJS or Karma.\r\n\r\n> Features are dependent on what the individual generators provide via Grunt tasks.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}