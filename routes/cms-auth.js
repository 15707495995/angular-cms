var passport = require('passport'), GoogleStrategy = require('passport-google').Strategy, log = require('npmlog');var cmsAuth = function (options, app) {	if (!app) {		throw new Error('Must provide express application!');	}  console.warn('cmsAuth', options);var baseUrl = options.host + ':' + options.port;  var authed = function(req, res, next) {    if (req.isAuthenticated()) {      return next();    } else {      res.json(503, {        error: "service_unavailable", reason: "authentication_unavailable"      });    }  };	//Setup	app.use(passport.initialize());	app.use(passport.session());  app.all('*', function(req, res, next){    console.warn('cmsAuth', req.params);    next();  });  app.get('/api/user', authed, function(req, res){    res.json(req.user);  });  app.get('/auth/google/:return?', passport.authenticate('google', { successRedirect: baseUrl }) );  app.get('/auth/logout', function(req, res){    req.logout();    res.redirect(options.apiBase);  });  passport.use(new GoogleStrategy({			returnURL: baseUrl + '/auth/google/return',			realm: baseUrl		},		function (identifier, profile, done) {			profile.identifier = identifier;			return done(null, profile);		}));	passport.serializeUser(function (user, done) {		done(null, user.identifier);	});	passport.deserializeUser(function (id, done) {		done(null, {identifier: id});	});  return app;};module.exports = cmsAuth;